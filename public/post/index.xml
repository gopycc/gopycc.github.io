<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on GoPy&#43;</title>
    <link>/post/</link>
    <description>Recent content in Posts on GoPy&#43;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>©2020 Gopy.cc</copyright>
    <lastBuildDate>Sun, 15 Apr 2018 23:30:00 +0000</lastBuildDate>
    
        <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git cheat sheet 让你不用再去记所有的git命令</title>
      <link>/post/git-cheat-sheet/</link>
      <pubDate>Sun, 15 Apr 2018 23:30:00 +0000</pubDate>
      
      <guid>/post/git-cheat-sheet/</guid>
      <description>&lt;p&gt;在 &lt;a href=&#34;http://goinon.org/2018/git-talk/&#34;target=&#34;_blank&#34;&gt;分享一点Git的感受与总结&lt;/a&gt;讲到了vscode中使用git命令行的便利，同时有人在github上分享了一份git的命令手册，转过来备查，愿你也能了然于心。&lt;/p&gt;
&lt;p&gt;github: &lt;a href=&#34;https://github.com/arslanbilal/git-cheat-sheet&#34;&gt;https://github.com/arslanbilal/git-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面开始Git Cheat Sheet的内容&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;索引&#34;&gt;索引&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%e9%85%8d%e7%bd%ae&#34;&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6&#34;&gt;配置文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e5%88%9b%e5%bb%ba&#34;&gt;创建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e6%9c%ac%e5%9c%b0%e4%bf%ae%e6%94%b9&#34;&gt;本地修改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e6%90%9c%e7%b4%a2&#34;&gt;搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e6%8f%90%e4%ba%a4%e5%8e%86%e5%8f%b2&#34;&gt;提交历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e5%88%86%e6%94%af%e4%b8%8e%e6%a0%87%e7%ad%be&#34;&gt;分支与标签&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e6%9b%b4%e6%96%b0%e4%b8%8e%e5%8f%91%e5%b8%83&#34;&gt;更新与发布&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e5%90%88%e5%b9%b6%e4%b8%8e%e9%87%8d%e7%bd%ae&#34;&gt;合并与重置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%e6%92%a4%e9%94%80&#34;&gt;撤销&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#git-flow&#34;&gt;Git Flow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
      
    </item>
    
    <item>
      <title>分享一点Git的感受与总结</title>
      <link>/post/git-talk/</link>
      <pubDate>Sun, 15 Apr 2018 23:00:00 +0000</pubDate>
      
      <guid>/post/git-talk/</guid>
      <description>GIT入门法宝-客户端 刚开始接触GIT有一个好用的图形客户端非常重要，比如神器Sourcetree，不但界面简单大气而且非常稳定，配合kdi</description>
      
    </item>
    
    <item>
      <title>Golang统一处理HTTP请求中的异常捕获</title>
      <link>/post/golang-wraphandle/</link>
      <pubDate>Thu, 21 Sep 2017 15:28:00 +0000</pubDate>
      
      <guid>/post/golang-wraphandle/</guid>
      <description>&lt;p&gt;&lt;em&gt;对所有注册的路由handle进行异常捕获&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;golang使用panic()产生异常，然后可以recover()来捕获到异常，否则主程序直接宕掉，这是我们不希望看到的。
或者全程检查error，不主动抛出异常。即便这样，可能异常依然不能避免。&lt;/p&gt;
&lt;p&gt;现在即要recover()，又不用在每个handle里面都去recover()一遍。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>win10周年更新后程序各种卡死，进程无法结束怎么破？</title>
      <link>/post/win10-update-event-129/</link>
      <pubDate>Fri, 04 Nov 2016 15:57:00 +0000</pubDate>
      
      <guid>/post/win10-update-event-129/</guid>
      <description>最近THINKPAD T460P更新了WIN10周年版后程序各种卡死，运行一段时间，各种程序就开始崩溃，进程无法结束，最终只能强制关机。 这个B</description>
      
    </item>
    
    <item>
      <title>GIT分支管理模型</title>
      <link>/post/git-branching-model/</link>
      <pubDate>Fri, 21 Oct 2016 15:14:00 +0000</pubDate>
      
      <guid>/post/git-branching-model/</guid>
      <description>GIT分支管理模型 link: git-branching-model 主分支（Main branches） 项目两个常驻分支： master 主干分支（锁定），仅用于发布新版本，平时不能在上面干活，只做代码</description>
      
    </item>
    
    <item>
      <title>CentOS访问Windows共享文件夹</title>
      <link>/post/centos-share-windows/</link>
      <pubDate>Fri, 21 Oct 2016 15:11:00 +0000</pubDate>
      
      <guid>/post/centos-share-windows/</guid>
      <description>1. 在地址栏中输入下面内容: smb://Windows IP/Share folder name，smb为Server Message Block协议的简称，是一种IBM协议，运行在TCP/IP协议之上。 从Win</description>
      
    </item>
    
    <item>
      <title>CentOS详解TOP命令</title>
      <link>/post/centos-top/</link>
      <pubDate>Wed, 19 Oct 2016 10:46:00 +0000</pubDate>
      
      <guid>/post/centos-top/</guid>
      <description>&lt;p&gt;最近在docker（宿主机是centos虚拟机）里安装gitlab，发现随着时间的运行，虚拟机的内存持续走高，运行几个小时之后内存已经爆掉了，putty远程处理于假死状态。
这个时候就需要查看内存进程，发现有10多个ruby进程在运行，最终定位到docker容器的问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用到的指令：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;*查看内存使用情况 *&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ free -m
$ top //shift+m按内存占用比排序
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;清理内存&lt;/em&gt;（效果不是很理想，最终只能强制关闭虚拟机0_0）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sync 
# echo 3 &amp;gt; /proc/sys/vm/drop_caches
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;top命令经常用来监控linux的系统状况，比如cpu、内存的使用，下面是各个数据的含义。&lt;/strong&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Hyper-v虚拟机文件VHDX与VHD的格式转换</title>
      <link>/post/hyperv-vhdx-to-vhd/</link>
      <pubDate>Wed, 19 Oct 2016 10:46:00 +0000</pubDate>
      
      <guid>/post/hyperv-vhdx-to-vhd/</guid>
      <description>今天遇到一个坑，我在本机(windows 10)上创建的CentOS虚拟机作为docker的宿主机，部署了gitlab等容器，准备迁移到服务器</description>
      
    </item>
    
    <item>
      <title>CentOS网络配置</title>
      <link>/post/centos-network-config/</link>
      <pubDate>Wed, 19 Oct 2016 10:25:00 +0000</pubDate>
      
      <guid>/post/centos-network-config/</guid>
      <description>修改配置文件 # vi /etc/sysconfig/network-scripts/ifcfg-eth0 静态网络配置 BOOTPROTO=static ONBOOT=yes IPADDR=192.168.0.109 PREFIX=24 //子网掩码:255.255.255.0 GATEWAY=192.168.0.1 DNS1=192.168.0.1 BROADCAST=192.168.0.255 DEVICE=eth0 然后ESC退出编辑模式 保存退出 :wq! 或放弃修改 :q! 重启网络服</description>
      
    </item>
    
    <item>
      <title>使用git svn clone迁移svn仓库</title>
      <link>/post/my-git-svn-clone/</link>
      <pubDate>Fri, 30 Sep 2016 13:39:00 +0000</pubDate>
      
      <guid>/post/my-git-svn-clone/</guid>
      <description>&lt;h3 id=&#34;git-svn-clone时间估算&#34;&gt;git svn clone时间估算&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;处理器: Intel(R) Xeon(R) CPU E5-2620 @2.00GHz 2.00Ghz&lt;/li&gt;
&lt;li&gt;内存：32.0 GB&lt;/li&gt;
&lt;li&gt;操作系统: Windows Server 2008 R2 Enterprise SP1 64位&lt;/li&gt;
&lt;li&gt;迁移总提交数：26000&lt;/li&gt;
&lt;li&gt;迁移总用时：11Hour 40Min&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;git-svn-clone迁移svn仓库&#34;&gt;git svn clone迁移svn仓库&lt;/h3&gt;
&lt;p&gt;clone命令可以指定很多参数，主要用到这些，你也可以使用git svn help查看完整的参数列表。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; git svn clone https://172.16.0.241:8443/svn/projects -r 76896:HEAD --no-metadata --authors-file=svnuser.text --trunk=svnproject --branches=svnbranch yourGitProject
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;r指定起止版本号。&lt;/li&gt;
&lt;li&gt;no-metadata阻止git导出SVN包含的一些无用信息。&lt;/li&gt;
&lt;li&gt;authors-file必须指定svn帐号在git中的映射。&lt;/li&gt;
&lt;li&gt;trunk指定导出仓库的主干项目路径。&lt;/li&gt;
&lt;li&gt;branches指定svn的分支项目路径。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：clone命令需要管理员权限，否则会遇到下面的异常：&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>.NET 4.5&#43;项目迁移.NET Core的问题记录</title>
      <link>/post/net45-to-netcore/</link>
      <pubDate>Fri, 23 Sep 2016 14:45:00 +0000</pubDate>
      
      <guid>/post/net45-to-netcore/</guid>
      <description>这几天试着把目前的开发框架迁移到新的.net core平台，中间遇到的问题在这里简单记录一下。 迁移过程遇到的最大的问题IOC容器。我目前使用的</description>
      
    </item>
    
    <item>
      <title>JAVA 环境变量批处理</title>
      <link>/post/java-config-bash/</link>
      <pubDate>Fri, 07 Aug 2015 12:29:00 +0000</pubDate>
      
      <guid>/post/java-config-bash/</guid>
      <description>@echo off set regpath=HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment set javahome=D:\Java\jdk1.7.0_40 echo. echo ************************************************************ echo * * echo * JDK 系统环境变量设置 * echo * * echo ************************************************************ echo. echo # 准备设置环境变量: JAVA_HOME=%javahome% echo # 注意: 如果JAVA_HOME存在,会被覆盖,此操作</description>
      
    </item>
    
    <item>
      <title>使用FluentNHibernate出现列“ReservedWord”不属于表 ReservedWords</title>
      <link>/post/fluentnhibernate-reservedword/</link>
      <pubDate>Wed, 27 May 2015 01:06:00 +0000</pubDate>
      
      <guid>/post/fluentnhibernate-reservedword/</guid>
      <description>&lt;p&gt;NHibernate+FluentNHibernate+MySql 运行时黄页显示下边的异常，项目中找了半天没出现过这个列的关键字。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[ArgumentException: 列“ReservedWord”不属于表 ReservedWords。]
   System.Data.DataRow.GetDataColumn(String columnName) +5310119
   System.Data.DataRow.get_Item(String columnName) +13
   NHibernate.Dialect.Schema.AbstractDataBaseSchema.GetReservedWords() +170
   NHibernate.Tool.hbm2ddl.SchemaMetadataUpdater.GetReservedWords(Dialect dialect, IConnectionHelper connectionHelper) +100
   NHibernate.Tool.hbm2ddl.SchemaMetadataUpdater.Update(ISessionFactory sessionFactory) +78
   NHibernate.Impl.SessionFactoryImpl..ctor(Configuration cfg, IMapping mapping, Settings settings, EventListeners listeners) +700
   NHibernate.Cfg.Configuration.BuildSessionFactory() +104
   FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\work\coding\fluentNhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:230

[FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.]
&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
    
  </channel>
</rss>
